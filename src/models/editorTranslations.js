import { translate as t } from '@nextcloud/l10n'

/**
 * Translations file from library source
 * We also use that to edit the end strings of
 * some buttons, like resetOperations
 *
 * @see https://raw.githubusercontent.com/scaleflex/filerobot-image-editor/v4.8.1/packages/react-filerobot-image-editor/src/context/defaultTranslations.js
 */
export default {
	name: t('viewer', 'Name'),
	save: t('viewer', 'Save'),
	saveAs: t('viewer', 'Save as'),
	back: t('viewer', 'Back'),
	loading: t('viewer', 'Loading …'),
	// resetOperations: 'Reset/delete all operations',
	resetOperations: t('viewer', 'Reset'),
	changesLoseWarningHint: t('viewer', 'All changes will be lost.'),
	discardChangesWarningHint: t('viewer', 'Are you sure you want to continue?'),
	cancel: t('viewer', 'Cancel'),
	apply: t('viewer', 'Apply'),
	warning: t('viewer', 'Warning'),
	confirm: t('viewer', 'Confirm'),
	discardChanges: t('viewer', 'Discard changes'),
	undoTitle: t('viewer', 'Undo'),
	redoTitle: t('viewer', 'Redo'),
	showImageTitle: t('viewer', 'Show original image'),
	zoomInTitle: t('viewer', 'Zoom in'),
	zoomOutTitle: t('viewer', 'Zoom out'),
	toggleZoomMenuTitle: t('viewer', 'Toggle zoom menu'),
	adjustTab: t('viewer', 'Adjust'),
	finetuneTab: t('viewer', 'Fine-tune'),
	filtersTab: t('viewer', 'Filters'),
	watermarkTab: t('viewer', 'Watermark'),
	annotateTabLabel: t('viewer', 'Draw'),
	resize: t('viewer', 'Resize'),
	resizeTab: t('viewer', 'Resize'),
	imageName: t('viewer', 'Image name'),
	invalidImageError: t('viewer', 'Invalid image.'),
	uploadImageError: t('viewer', 'Error while uploading the image.'),
	areNotImages: t('viewer', 'are not images'),
	isNotImage: t('viewer', 'is not an image'),
	toBeUploaded: t('viewer', 'to be uploaded'),
	cropTool: t('viewer', 'Crop'),
	original: t('viewer', 'Original'),
	custom: t('viewer', 'Custom'),
	square: t('viewer', 'Square'),
	landscape: t('viewer', 'Landscape'),
	portrait: t('viewer', 'Portrait'),
	ellipse: t('viewer', 'Ellipse'),
	classicTv: t('viewer', 'Classic TV'),
	cinemascope: t('viewer', 'CinemaScope'),
	arrowTool: t('viewer', 'Arrow'),
	blurTool: t('viewer', 'Blur'),
	brightnessTool: t('viewer', 'Brightness'),
	contrastTool: t('viewer', 'Contrast'),
	ellipseTool: t('viewer', 'Ellipse'),
	unFlipX: t('viewer', 'Un-flip X'),
	flipX: t('viewer', 'Flip X'),
	unFlipY: t('viewer', 'Un-flip Y'),
	flipY: t('viewer', 'Flip Y'),
	hsvTool: t('viewer', 'HSV'),
	hue: t('viewer', 'Hue'),
	brightness: t('viewer', 'Brightness'),
	saturation: t('viewer', 'Saturation'),
	value: t('viewer', 'Value'),
	imageTool: t('viewer', 'Image'),
	importing: t('viewer', 'Importing …'),
	addImage: t('viewer', '+ Add image'),
	uploadImage: t('viewer', 'Upload image'),
	fromGallery: t('viewer', 'From gallery'),
	lineTool: t('viewer', 'Line'),
	penTool: t('viewer', 'Pen'),
	polygonTool: t('viewer', 'Polygon'),
	sides: t('viewer', 'Sides'),
	rectangleTool: t('viewer', 'Rectangle'),
	cornerRadius: t('viewer', 'Corner Radius'),
	resizeWidthTitle: t('viewer', 'Width in pixels'),
	resizeHeightTitle: t('viewer', 'Height in pixels'),
	toggleRatioLockTitle: t('viewer', 'Toggle ratio lock'),
	resetSize: t('viewer', 'Reset to original image size'),
	rotateTool: t('viewer', 'Rotate'),
	textTool: t('viewer', 'Text'),
	textSpacings: t('viewer', 'Text spacing'),
	textAlignment: t('viewer', 'Text alignment'),
	fontFamily: t('viewer', 'Font family'),
	size: t('viewer', 'Size'),
	letterSpacing: t('viewer', 'Letter spacing'),
	lineHeight: t('viewer', 'Line height'),
	warmthTool: t('viewer', 'Warmth'),
	addWatermark: t('viewer', '+ Add watermark'),
	addTextWatermark: t('viewer', '+ Add text watermark'),
	addWatermarkTitle: t('viewer', 'Choose watermark type'),
	uploadWatermark: t('viewer', 'Upload watermark'),
	addWatermarkAsText: t('viewer', 'Add as text'),
	padding: t('viewer', 'Padding'),
	paddings: t('viewer', 'Paddings'),
	shadow: t('viewer', 'Shadow'),
	horizontal: t('viewer', 'Horizontal'),
	vertical: t('viewer', 'Vertical'),
	blur: t('viewer', 'Blur'),
	opacity: t('viewer', 'Opacity'),
	transparency: t('viewer', 'Transparency'),
	position: t('viewer', 'Position'),
	stroke: t('viewer', 'Stroke'),
	saveAsModalTitle: t('viewer', 'Save image as'),
	extension: t('viewer', 'Extension'),
	format: t('viewer', 'Format'),
	nameIsRequired: t('viewer', 'Name is required.'),
	quality: t('viewer', 'Quality'),
	imageDimensionsHoverTitle: t('viewer', 'Saved image size (width x height)'),
	cropSizeLowerThanResizedWarning: t('viewer', 'Note that the selected crop area is lower than the applied resize which might cause quality decrease'),
	actualSize: t('viewer', 'Actual size (100%)'),
	fitSize: t('viewer', 'Fit size'),
	addImageTitle: t('viewer', 'Select image to add …'),
	mutualizedFailedToLoadImg: t('viewer', 'Failed to load image.'),
	tabsMenu: t('viewer', 'Menu'),
	download: t('viewer', 'Download'),
	width: t('viewer', 'Width'),
	height: t('viewer', 'Height'),
	plus: '+',
	cropItemNoEffect: t('viewer', 'No preview available for this crop item'),
}
